{"ast":null,"code":"var _jsxFileName = \"/Users/parvezkhan/Documents/projects/quates/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport colorArray from \"./colors.jsx\";\nconst url_for_coding_quotes = \"https://programming-quotes-api.herokuapp.com/quotes/random/lang/en\";\nvar g_quotes = \"\";\nvar g_author = \"\";\nvar g_coding_quotes = false;\n\nfunction onBtnClick(event) {\n  if (event.target.id == \"programing_btn\") {\n    g_coding_quotes = true;\n  } else {\n    g_coding_quotes = false;\n  }\n}\n\nconst spinner = document.getElementById(\"spinner\");\n\nfunction showSpinner() {\n  spinner.className = \"show\";\n}\n\nfunction hideSpinner() {\n  spinner.className = spinner.className.replace(\"show\", \"\");\n}\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [color, setColor] = useState(\"#00B1E1\");\n  const style = {\n    backgroundColor: color,\n    height: \"100%\",\n    width: \"100%\"\n  };\n\n  function getCodingQuotes() {\n    fetch(\"https://programming-quotes-api.herokuapp.com/quotes/random/lang/en\").then(res => res.json()).then(res => {\n      g_quotes = res.en;\n      g_author = res.author;\n      hideSpinner();\n    });\n  }\n\n  function getNormalQuotes() {\n    fetch(\"https://api.quotable.io/random\").then(res => res.json()).then(res => {\n      hideSpinner();\n      console.log(res);\n    }).catch(function (error) {\n      console.log(error);\n      setText(\"Server error\");\n      setAuthor(\"\");\n    });\n  }\n\n  function getAPIResult() {\n    var item = colorArray[Math.floor(Math.random() * colorArray.length)];\n    var result = \"\";\n    showSpinner();\n\n    if (g_coding_quotes) {\n      getCodingQuotes();\n      setText(g_quotes);\n      setAuthor(g_author);\n    } else {\n      getNormalQuotes(); //setText(g_quotes);\n      //setAuthor(g_author);\n    } //setColor(item);    \n\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (text != \"\") {} else {\n      getAPIResult();\n    }\n  });\n  const bgcolor = {\n    backgroundColor: {\n      color\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col .d-flex mr-md-3 p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"programing_btn\",\n    onClick: event => onBtnClick(event),\n    className: \"btn btn-outline-primary btn-lg mr-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Programming Quotes\"), React.createElement(\"button\", {\n    id: \"life_btn\",\n    onClick: event => onBtnClick(event),\n    className: \"btn btn-outline-primary btn-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Life  Quotes\"))), React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      height: \"95%\",\n      backgroundColor: \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Quetes, {\n    name: text,\n    author: author,\n    getAPIResult: getAPIResult,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))));\n}\n\nfunction navBar() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  });\n}\n\nconst Quetes = ({\n  name,\n  author,\n  getAPIResult,\n  color\n}) => {\n  const box_style = {\n    width: \"40%\",\n    height: \"auto\",\n    backgroundColor: \"\",\n    margin: \"0 auto\",\n    position: \"relative\",\n    top: \"30%\",\n    border: \"1px solid #1C6EA4\",\n    borderRadius: \"3px\",\n    backgroundColor: \"#fff\"\n  };\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    style: box_style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      height: \"auto\",\n      padding: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-quote-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"blockquote\", {\n    style: {\n      fontWeight: \"500\",\n      fontSize: \"1.5em\",\n      color: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    style: {\n      float: \"right\",\n      margin: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"- \", author))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      height: \"auto\",\n      position: \"relative\",\n      float: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: {\n      margin: \"10px\",\n      display: \"inline\",\n      backgroundColor: color,\n      border: \"none\",\n      color: \"white\",\n      borderRadius: \"3px\",\n      height: \"40px\",\n      width: \"100px\",\n      float: \"right\"\n    },\n    onClick: () => {\n      getAPIResult();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"New Quote\", \" \"), React.createElement(\"a\", {\n    style: {\n      float: \"left\",\n      margin: \"3px\",\n      position: \"relative\",\n      top: \"38%\"\n    },\n    className: \"twitter-share-button\",\n    href: `https://twitter.com/intent/tweet?text=\"${name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Tweet\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/parvezkhan/Documents/projects/quates/src/App.js"],"names":["React","useState","useEffect","colorArray","url_for_coding_quotes","g_quotes","g_author","g_coding_quotes","onBtnClick","event","target","id","spinner","document","getElementById","showSpinner","className","hideSpinner","replace","App","text","setText","author","setAuthor","color","setColor","style","backgroundColor","height","width","getCodingQuotes","fetch","then","res","json","en","getNormalQuotes","console","log","catch","error","getAPIResult","item","Math","floor","random","length","result","bgcolor","textAlign","navBar","Quetes","name","box_style","margin","position","top","border","borderRadius","padding","fontWeight","fontSize","float","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,MAAMC,qBAAqB,GAAG,oEAA9B;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,eAAe,GAAG,KAAtB;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACxB,MAAGA,KAAK,CAACC,MAAN,CAAaC,EAAb,IAAiB,gBAApB,EAAqC;AACnCJ,IAAAA,eAAe,GAAC,IAAhB;AACD,GAFD,MAEK;AACHA,IAAAA,eAAe,GAAC,KAAhB;AACD;AACF;;AAGD,MAAMK,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;;AACA,SAASC,WAAT,GAAuB;AACrBH,EAAAA,OAAO,CAACI,SAAR,GAAoB,MAApB;AACD;;AAED,SAASC,WAAT,GAAsB;AACpBL,EAAAA,OAAO,CAACI,SAAR,GAAoBJ,OAAO,CAACI,SAAR,CAAkBE,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,CAApB;AACD;;AAMD,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,SAAD,CAAlC;AACA,QAAMyB,KAAK,GAAG;AACZC,IAAAA,eAAe,EAAEH,KADL;AAEZI,IAAAA,MAAM,EAAE,MAFI;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAAd;;AAUA,WAASC,eAAT,GAA0B;AACxBC,IAAAA,KAAK,CAAC,oEAAD,CAAL,CAA4EC,IAA5E,CAAiFC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAAvF,EAAmGF,IAAnG,CAAwGC,GAAG,IAAE;AAC1G5B,MAAAA,QAAQ,GAAG4B,GAAG,CAACE,EAAf;AACA7B,MAAAA,QAAQ,GAAG2B,GAAG,CAACX,MAAf;AACAL,MAAAA,WAAW;AACb,KAJD;AAKD;;AAED,WAASmB,eAAT,GAA0B;AAExBL,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXhB,MAAAA,WAAW;AACXoB,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAID,KARH,EAQKM,KARL,CAQW,UAASC,KAAT,EAAgB;AACvBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAnB,MAAAA,OAAO,CAAC,cAAD,CAAP;AACAE,MAAAA,SAAS,CAAC,EAAD,CAAT;AAIH,KAfD;AAiBD;;AAED,WAASkB,YAAT,GAAwB;AAEtB,QAAIC,IAAI,GAAGvC,UAAU,CAACwC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB1C,UAAU,CAAC2C,MAAtC,CAAD,CAArB;AACA,QAAIC,MAAM,GAAG,EAAb;AAEAhC,IAAAA,WAAW;;AACX,QAAGR,eAAH,EAAmB;AACjBuB,MAAAA,eAAe;AACfT,MAAAA,OAAO,CAAChB,QAAD,CAAP;AACAkB,MAAAA,SAAS,CAACjB,QAAD,CAAT;AACD,KAJD,MAIK;AACH8B,MAAAA,eAAe,GADZ,CAEH;AACA;AACD,KAdqB,CAetB;;AACD;;AAKDlC,EAAAA,SAAS,CAAC,MAAM;AAGd;AAGA,QAAIkB,IAAI,IAAI,EAAZ,EAAgB,CACf,CADD,MACO;AACLqB,MAAAA,YAAY;AACb;AACF,GAVQ,CAAT;AAWA,QAAMO,OAAO,GAAG;AACdrB,IAAAA,eAAe,EAAE;AAAEH,MAAAA;AAAF;AADH,GAAhB;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAEE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,EAAE,EAAC,gBAAX;AAA4B,IAAA,OAAO,EAAGjB,KAAD,IAASD,UAAU,CAACC,KAAD,CAAxD;AAAiE,IAAA,SAAS,EAAC,wCAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAGA,KAAD,IAASD,UAAU,CAACC,KAAD,CAAlD;AAA2D,IAAA,SAAS,EAAC,gCAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADA,EASE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAEmB,MAAAA,MAAM,EAAE,KAAV;AAAiBD,MAAAA,eAAe,EAAE;AAAlC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEsB,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE7B,IADR;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,YAAY,EAAEmB,YAHhB;AAIE,IAAA,KAAK,EAAEjB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,CADF;AAsBD;;AAID,SAAS0B,MAAT,GAAiB;AACf,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD;;AAID,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQ9B,EAAAA,MAAR;AAAgBmB,EAAAA,YAAhB;AAA8BjB,EAAAA;AAA9B,CAAD,KAA2C;AACxD,QAAM6B,SAAS,GAAG;AAChBxB,IAAAA,KAAK,EAAE,KADS;AAEhBD,IAAAA,MAAM,EAAE,MAFQ;AAGhBD,IAAAA,eAAe,EAAE,EAHD;AAIhB2B,IAAAA,MAAM,EAAE,QAJQ;AAKhBC,IAAAA,QAAQ,EAAE,UALM;AAMhBC,IAAAA,GAAG,EAAE,KANW;AAOhBC,IAAAA,MAAM,EAAE,mBAPQ;AAQhBC,IAAAA,YAAY,EAAE,KARE;AAShB/B,IAAAA,eAAe,EAAE;AATD,GAAlB;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE0B,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEzB,MAAAA,MAAM,EAAE,MAAV;AAAkB+B,MAAAA,OAAO,EAAE;AAA3B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,QAAQ,EAAE,OAA/B;AAAwCrC,MAAAA,KAAK,EAAEA;AAA/C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG4B,IAHH,CAFF,EAOE;AAAG,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE,OAAT;AAAkBR,MAAAA,MAAM,EAAE;AAA1B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiDhC,MAAjD,CAPF,CADF,CADF,EAaE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE,MAAV;AAAkB2B,MAAAA,QAAQ,EAAE,UAA5B;AAAwCO,MAAAA,KAAK,EAAE;AAA/C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,MAAM,EAAE,MADH;AAELS,MAAAA,OAAO,EAAE,QAFJ;AAGLpC,MAAAA,eAAe,EAAEH,KAHZ;AAILiC,MAAAA,MAAM,EAAE,MAJH;AAKLjC,MAAAA,KAAK,EAAE,OALF;AAMLkC,MAAAA,YAAY,EAAE,KANT;AAOL9B,MAAAA,MAAM,EAAE,MAPH;AAQLC,MAAAA,KAAK,EAAE,OARF;AASJiC,MAAAA,KAAK,EAAC;AATF,KADT;AAYE,IAAA,OAAO,EAAE,MAAM;AACbrB,MAAAA,YAAY;AACb,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBY,GAhBZ,CAJF,EAuBE;AAAG,IAAA,KAAK,EAAE;AAACqB,MAAAA,KAAK,EAAC,MAAP;AAAcR,MAAAA,MAAM,EAAC,KAArB;AAA2BC,MAAAA,QAAQ,EAAC,UAApC;AAA+CC,MAAAA,GAAG,EAAC;AAAnD,KAAV;AAAqE,IAAA,SAAS,EAAC,sBAA/E;AACN,IAAA,IAAI,EAAG,0CAAyCJ,IAAK,EAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBF,CADA,CAbF,CADF;AAgDD,CA7DD;;AA+DA,eAAejC,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport colorArray from \"./colors.jsx\";\n\n\nconst url_for_coding_quotes = \"https://programming-quotes-api.herokuapp.com/quotes/random/lang/en\";\nvar g_quotes = \"\";\nvar g_author = \"\";\nvar g_coding_quotes = false;\n\n\n\nfunction onBtnClick(event){\n  if(event.target.id==\"programing_btn\"){\n    g_coding_quotes=true;\n  }else{\n    g_coding_quotes=false;\n  }\n}\n\n\nconst spinner = document.getElementById(\"spinner\");\nfunction showSpinner() {\n  spinner.className = \"show\";\n}\n\nfunction hideSpinner(){\n  spinner.className = spinner.className.replace(\"show\", \"\");\n}\n\n\n\n\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [color, setColor] = useState(\"#00B1E1\");\n  const style = {\n    backgroundColor: color,\n    height: \"100%\",\n    width: \"100%\"\n  };\n\n\n  \n\n\n  function getCodingQuotes(){\n    fetch(\"https://programming-quotes-api.herokuapp.com/quotes/random/lang/en\").then(res=> res.json()).then(res=>{\n       g_quotes = res.en;\n       g_author = res.author;\n       hideSpinner();\n    })\n  }\n\n  function getNormalQuotes(){\n\n    fetch(\"https://api.quotable.io/random\")\n      .then(res => res.json())\n      .then(res => {\n        hideSpinner();\n        console.log(res);\n\n        \n        \n      }).catch(function(error) {\n        console.log(error);\n        setText(\"Server error\");\n        setAuthor(\"\");\n        \n        \n\n    });\n\n  }\n\n  function getAPIResult() {\n\n    var item = colorArray[Math.floor(Math.random() * colorArray.length)];\n    var result = \"\";\n\n    showSpinner();\n    if(g_coding_quotes){\n      getCodingQuotes();\n      setText(g_quotes);\n      setAuthor(g_author);\n    }else{\n      getNormalQuotes();\n      //setText(g_quotes);\n      //setAuthor(g_author);\n    }\n    //setColor(item);    \n  }\n\n\n\n\n  useEffect(() => {\n    \n    \n    // Update the document title using the browser API\n\n\n    if (text != \"\") {\n    } else {\n      getAPIResult();\n    }\n  });\n  const bgcolor = {\n    backgroundColor: { color }\n  };\n  return (\n    <div className=\"container-fluid\" style={style}> \n    <div className=\"row\">\n      <div className=\"col .d-flex mr-md-3 p-3\">\n        <button id=\"programing_btn\" onClick={(event)=>onBtnClick(event)} className=\"btn btn-outline-primary btn-lg mr-md-3\">Programming Quotes</button>\n        <button id=\"life_btn\" onClick={(event)=>onBtnClick(event)} className=\"btn btn-outline-primary btn-lg\">Life  Quotes</button>\n      </div>\n\n    </div>\n     \n      <div className=\"row\" style={{ height: \"95%\", backgroundColor: \"\" }}>\n        <div className=\"col-12\" style={{ textAlign: \"center\" }}>\n          <Quetes\n            name={text}\n            author={author}\n            getAPIResult={getAPIResult}\n            color={color}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\nfunction navBar(){\n  return(\n    <div>\n\n    </div>\n  )\n}\n\n\n\nconst Quetes = ({ name, author, getAPIResult, color }) => {\n  const box_style = {\n    width: \"40%\",\n    height: \"auto\",\n    backgroundColor: \"\",\n    margin: \"0 auto\",\n    position: \"relative\",\n    top: \"30%\",\n    border: \"1px solid #1C6EA4\",\n    borderRadius: \"3px\",\n    backgroundColor: \"#fff\"\n  };\n\n  return (\n    <div className=\"container-fluid\" style={box_style}>\n      <div className=\"row\">\n        <div className=\"col-12\" style={{ height: \"auto\", padding: \"10px\" }}>\n          <i className=\"fa fa-quote-left\"></i>\n          <blockquote\n            style={{ fontWeight: \"500\", fontSize: \"1.5em\", color: color }}\n          >\n            {name}\n          </blockquote>\n          <p style={{ float: \"right\", margin: \"10px\" }}>- {author}</p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n      <div\n        className=\"col-12\"\n        style={{ height: \"auto\", position: \"relative\", float: \"right\" }}\n      >\n        <button\n          style={{\n            margin: \"10px\",\n            display: \"inline\",\n            backgroundColor: color,\n            border: \"none\",\n            color: \"white\",\n            borderRadius: \"3px\",\n            height: \"40px\",\n            width: \"100px\"\n            ,float:\"right\"\n          }}\n          onClick={() => {\n            getAPIResult();\n          }}\n        >\n          New Quote{\" \"}\n        </button>\n\n        <a style={{float:\"left\",margin:\"3px\",position:\"relative\",top:\"38%\"}} className=\"twitter-share-button\"\n  href={`https://twitter.com/intent/tweet?text=\"${name}`}>\nTweet</a>\n      </div>\n\n      </div>\n\n      \n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}